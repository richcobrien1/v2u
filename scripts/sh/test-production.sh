#!/bin/bash
# V2U Production Testing Suite
# Validates complete pipeline functionality

set -euo pipefail

DOMAIN="${1:-v2u-website.vercel.app}"

echo "üß™ V2U Production Testing Suite"
echo "==============================="
echo "üåê Testing domain: $DOMAIN"
echo ""

# Test 1: Main site
echo "1Ô∏è‚É£ Testing main site..."
MAIN_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN")
if [ "$MAIN_STATUS" = "200" ]; then
    echo "‚úÖ Main site: PASS ($MAIN_STATUS)"
else
    echo "‚ùå Main site: FAIL ($MAIN_STATUS)"
fi

# Test 2: Podcast dashboard
echo "2Ô∏è‚É£ Testing podcast dashboard..."
DASHBOARD_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "https://$DOMAIN/podcast-dashboard")
if [ "$DASHBOARD_STATUS" = "200" ]; then
    echo "‚úÖ Podcast dashboard: PASS ($DASHBOARD_STATUS)"
else
    echo "‚ùå Podcast dashboard: FAIL ($DASHBOARD_STATUS)"
fi

# Test 3: Episodes API
echo "3Ô∏è‚É£ Testing episodes API..."
API_RESPONSE=$(curl -s "https://$DOMAIN/api/episodes")
API_STATUS=$?

if [ $API_STATUS -eq 0 ]; then
    EPISODE_COUNT=$(echo "$API_RESPONSE" | grep -o '"title"' | wc -l)
    echo "‚úÖ Episodes API: PASS ($EPISODE_COUNT episodes found)"
    
    # Show first episode for verification
    FIRST_EPISODE=$(echo "$API_RESPONSE" | head -20)
    echo "üìä Sample response:"
    echo "$FIRST_EPISODE"
else
    echo "‚ùå Episodes API: FAIL"
fi

# Test 4: R2 bucket connectivity
echo ""
echo "4Ô∏è‚É£ Testing R2 bucket connectivity..."
if command -v aws >/dev/null 2>&1; then
    # This requires AWS CLI configured for R2
    echo "‚ö†Ô∏è  R2 direct test requires AWS CLI configured for R2"
    echo "   Skipping direct bucket test"
else
    echo "‚ö†Ô∏è  AWS CLI not available for R2 testing"
fi

# Test 5: Performance check
echo ""
echo "5Ô∏è‚É£ Performance check..."
LOAD_TIME=$(curl -s -o /dev/null -w "%{time_total}" "https://$DOMAIN/podcast-dashboard")
echo "‚è±Ô∏è  Dashboard load time: ${LOAD_TIME}s"

if (( $(echo "$LOAD_TIME < 3.0" | bc -l) )); then
    echo "‚úÖ Performance: GOOD"
elif (( $(echo "$LOAD_TIME < 5.0" | bc -l) )); then
    echo "‚ö†Ô∏è  Performance: ACCEPTABLE"
else
    echo "‚ùå Performance: SLOW"
fi

echo ""
echo "ÔøΩ TESTING COMPLETE"
echo "==================="
echo ""
echo "üìã Production Checklist:"
echo "‚ñ° Main site loading"
echo "‚ñ° Dashboard functional"
echo "‚ñ° API returning data"
echo "‚ñ° Episodes displaying"
echo "‚ñ° Hover effects working"
echo "‚ñ° Mobile responsive"
echo ""
echo "üîÑ Automation Status: READY"